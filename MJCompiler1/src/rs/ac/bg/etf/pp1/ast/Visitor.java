// generated with ast extension for cup
// version 0.8
// 26/7/2021 21:7:26


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(ExprWithBrackets ExprWithBrackets);
    public void visit(Mulop Mulop);
    public void visit(AddopExpr AddopExpr);
    public void visit(Relop Relop);
    public void visit(TermList TermList);
    public void visit(FormParameters FormParameters);
    public void visit(ProgramDeclList ProgramDeclList);
    public void visit(CaseSt CaseSt);
    public void visit(StatementList StatementList);
    public void visit(VarPart VarPart);
    public void visit(ProgramDecl ProgramDecl);
    public void visit(Addop Addop);
    public void visit(ConstPart ConstPart);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(ConditionFactOp ConditionFactOp);
    public void visit(ConstList ConstList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(FormParsList FormParsList);
    public void visit(Condition Condition);
    public void visit(ExprZeroOrOne ExprZeroOrOne);
    public void visit(CaseList CaseList);
    public void visit(ActParsList ActParsList);
    public void visit(ElsePart ElsePart);
    public void visit(Brackets Brackets);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(Expr1 Expr1);
    public void visit(ActPars ActPars);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Const Const);
    public void visit(ActualPars ActualPars);
    public void visit(NumConstOneOrZero NumConstOneOrZero);
    public void visit(Statement Statement);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(MinusOneOrZero MinusOneOrZero);
    public void visit(DesignatorOpPart DesignatorOpPart);
    public void visit(ExtendsPart ExtendsPart);
    public void visit(ClassMethodDecl ClassMethodDecl);
    public void visit(NoBrackets NoBrackets);
    public void visit(BracketsB BracketsB);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLessEqual RelopLessEqual);
    public void visit(RelopLess RelopLess);
    public void visit(RelopGreatherEqual RelopGreatherEqual);
    public void visit(RelopGreather RelopGreather);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopEqual RelopEqual);
    public void visit(Assignop Assignop);
    public void visit(DesignatorIdentitet DesignatorIdentitet);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(DesignatorExpr DesignatorExpr);
    public void visit(NoActualPars NoActualPars);
    public void visit(ActualParamsParen ActualParamsParen);
    public void visit(NoExprBrackets NoExprBrackets);
    public void visit(ExprExists ExprExists);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNew FactorNew);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNumber FactorNumber);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(TermFactor TermFactor);
    public void visit(TermMulOpFactor TermMulOpFactor);
    public void visit(SingleTerm SingleTerm);
    public void visit(Terms Terms);
    public void visit(ExprNoMinus ExprNoMinus);
    public void visit(ExprWithMinus ExprWithMinus);
    public void visit(SimpleExpr SimpleExpr);
    public void visit(MinusAddop MinusAddop);
    public void visit(PlusAddop PlusAddop);
    public void visit(Expr1Term Expr1Term);
    public void visit(ExprAddOp ExprAddOp);
    public void visit(Expr1Minus Expr1Minus);
    public void visit(CondNoRelOp CondNoRelOp);
    public void visit(CondRelOp CondRelOp);
    public void visit(CondFactsMultipleExpr CondFactsMultipleExpr);
    public void visit(CondFactExp CondFactExp);
    public void visit(SingleConditionTerm SingleConditionTerm);
    public void visit(ConditionTerms ConditionTerms);
    public void visit(OrIf OrIf);
    public void visit(SingleCondition SingleCondition);
    public void visit(Conditions Conditions);
    public void visit(ActParsExpr ActParsExpr);
    public void visit(ActParsListExpr ActParsListExpr);
    public void visit(NoActualParameters NoActualParameters);
    public void visit(ActualParameters ActualParameters);
    public void visit(ErrorAssign ErrorAssign);
    public void visit(DesignatorDecOp DesignatorDecOp);
    public void visit(DesignatorIncOp DesignatorIncOp);
    public void visit(DesignatorAssignOp DesignatorAssignOp);
    public void visit(NoExpr NoExpr);
    public void visit(OneExpr OneExpr);
    public void visit(NoElsePart NoElsePart);
    public void visit(ElsePartStm ElsePartStm);
    public void visit(NoNumConst NoNumConst);
    public void visit(OneNumConst OneNumConst);
    public void visit(CaseStatement CaseStatement);
    public void visit(NoCase NoCase);
    public void visit(Cases Cases);
    public void visit(LparenIf LparenIf);
    public void visit(RparenIf RparenIf);
    public void visit(ElseIf ElseIf);
    public void visit(StatementWithBrace StatementWithBrace);
    public void visit(StatementIf StatementIf);
    public void visit(StatementIfWElse StatementIfWElse);
    public void visit(StatementPrint StatementPrint);
    public void visit(StatementRead StatementRead);
    public void visit(StatementDesignator StatementDesignator);
    public void visit(NotStatements NotStatements);
    public void visit(Statements Statements);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(FormPars FormPars);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(Type Type);
    public void visit(MehtodTypeNameCustom MehtodTypeNameCustom);
    public void visit(MethodTypeNameVoid MethodTypeNameVoid);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(ClassMethodDeclaration ClassMethodDeclaration);
    public void visit(NoVariableDeclarations NoVariableDeclarations);
    public void visit(VariableDeclarations VariableDeclarations);
    public void visit(NoExtendsPart NoExtendsPart);
    public void visit(ExtendsPartType ExtendsPartType);
    public void visit(ClassDecl ClassDecl);
    public void visit(ErrorInDeclaringItem ErrorInDeclaringItem);
    public void visit(ArrayVarPart ArrayVarPart);
    public void visit(VarPartItem VarPartItem);
    public void visit(VarDeclPart VarDeclPart);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(VarDecl VarDecl);
    public void visit(ConstBool ConstBool);
    public void visit(ConstChar ConstChar);
    public void visit(ConstNumber ConstNumber);
    public void visit(ConstDeclarationPart ConstDeclarationPart);
    public void visit(ConstDeclarations ConstDeclarations);
    public void visit(ConstDecl ConstDecl);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(NoProgramDeclarations NoProgramDeclarations);
    public void visit(ProgramDeclarations ProgramDeclarations);
    public void visit(ProgramID ProgramID);
    public void visit(Program Program);

}
