INFO  00:23:59,046 - Compiling source file: D:\ucenje\pp\projekat\workspace\MJCompiler1\test\program.mj
INFO  00:23:59,088 - #2 program
INFO  00:23:59,088 - #27 MJProgram
INFO  00:23:59,088 - #3 {
INFO  00:23:59,089 - #27 int
INFO  00:23:59,090 - #27 k
INFO  00:23:59,091 - #8 (
INFO  00:23:59,091 - #27 int
INFO  00:23:59,091 - #27 c
INFO  00:23:59,091 - #9 )
INFO  00:23:59,094 - #27 int
INFO  00:23:59,095 - #27 c
INFO  00:23:59,095 - #7 ;
INFO  00:23:59,095 - #27 int
INFO  00:23:59,096 - #27 x
INFO  00:23:59,096 - #7 ;
INFO  00:23:59,096 - #27 char
INFO  00:23:59,096 - #27 f
INFO  00:23:59,097 - #5 [
INFO  00:23:59,097 - #6 ]
INFO  00:23:59,097 - #7 ;
INFO  00:23:59,097 - #27 int
INFO  00:23:59,097 - #27 q
INFO  00:23:59,098 - #5 [
INFO  00:23:59,098 - #6 ]
INFO  00:23:59,098 - #3 {
ERROR 00:23:59,098 - 
Sintaksna greska na liniji 4
INFO  00:23:59,098 - #27 c
INFO  00:23:59,098 - #10 =
INFO  00:23:59,098 - #26 1
INFO  00:23:59,099 - #12 +
INFO  00:23:59,099 - #7 ;
INFO  00:23:59,100 - #27 r
INFO  00:23:59,100 - #10 =
INFO  00:23:59,100 - #29 z
INFO  00:23:59,100 - #7 ;
INFO  00:23:59,100 - #27 d
INFO  00:23:59,100 - #10 =
INFO  00:23:59,100 - #26 3
INFO  00:23:59,100 - #7 ;
INFO  00:23:59,101 - #27 d
INFO  00:23:59,101 - #5 [
INFO  00:23:59,101 - #26 0
INFO  00:23:59,101 - #6 ]
INFO  00:23:59,101 - #10 =
INFO  00:23:59,101 - #26 3
INFO  00:23:59,101 - #7 ;
INFO  00:23:59,101 - #27 f
INFO  00:23:59,102 - #5 [
INFO  00:23:59,102 - #26 0
INFO  00:23:59,102 - #6 ]
INFO  00:23:59,102 - #10 =
INFO  00:23:59,102 - #26 3
INFO  00:23:59,102 - #7 ;
INFO  00:23:59,102 - #27 d
INFO  00:23:59,103 - #5 [
INFO  00:23:59,103 - #26 0
INFO  00:23:59,103 - #6 ]
INFO  00:23:59,103 - #10 =
INFO  00:23:59,103 - #27 f
INFO  00:23:59,103 - #5 [
INFO  00:23:59,103 - #26 0
INFO  00:23:59,103 - #6 ]
INFO  00:23:59,104 - #7 ;
INFO  00:23:59,104 - #27 d
INFO  00:23:59,104 - #5 [
INFO  00:23:59,104 - #26 0
INFO  00:23:59,104 - #6 ]
INFO  00:23:59,104 - #10 =
INFO  00:23:59,106 - #27 q
INFO  00:23:59,107 - #5 [
INFO  00:23:59,107 - #26 0
INFO  00:23:59,107 - #6 ]
INFO  00:23:59,107 - #7 ;
INFO  00:23:59,107 - #27 c
INFO  00:23:59,107 - #19 ++
INFO  00:23:59,107 - #7 ;
INFO  00:23:59,107 - #27 f
INFO  00:23:59,107 - #10 =
INFO  00:23:59,107 - #24 new
INFO  00:23:59,108 - #27 int
INFO  00:23:59,108 - #5 [
INFO  00:23:59,108 - #26 3
INFO  00:23:59,108 - #6 ]
INFO  00:23:59,108 - #7 ;
INFO  00:23:59,108 - #27 x
INFO  00:23:59,108 - #10 =
INFO  00:23:59,109 - #24 new
INFO  00:23:59,109 - #27 int
INFO  00:23:59,109 - #5 [
INFO  00:23:59,109 - #26 3
INFO  00:23:59,109 - #6 ]
INFO  00:23:59,109 - #7 ;
INFO  00:23:59,109 - #27 f
INFO  00:23:59,110 - #10 =
INFO  00:23:59,110 - #24 new
INFO  00:23:59,110 - #27 char
INFO  00:23:59,110 - #5 [
INFO  00:23:59,110 - #26 1
INFO  00:23:59,110 - #6 ]
INFO  00:23:59,110 - #7 ;
INFO  00:23:59,111 - #11 return
INFO  00:23:59,111 - #7 ;
INFO  00:23:59,111 - #4 }
INFO  00:23:59,111 - #15 void
INFO  00:23:59,111 - #27 main
INFO  00:23:59,111 - #8 (
INFO  00:23:59,111 - #9 )
INFO  00:23:59,111 - #27 int
INFO  00:23:59,111 - #27 i
INFO  00:23:59,111 - #7 ;
INFO  00:23:59,111 - #3 {
INFO  00:23:59,111 - #27 i
INFO  00:23:59,112 - #10 =
ERROR 00:23:59,112 - Izvrsen oporavak od greske u definiciji globalne promenljive do , ili ;. Greska je u liniji 4
INFO  00:23:59,113 - #26 1
INFO  00:23:59,114 - #7 ;
INFO  00:23:59,115 - #14 print
INFO  00:23:59,115 - #8 (
INFO  00:23:59,115 - #27 i
INFO  00:23:59,115 - #9 )
INFO  00:23:59,116 - #7 ;
INFO  00:23:59,117 - #14 print
INFO  00:23:59,117 - #8 (
INFO  00:23:59,117 - #29 c
INFO  00:23:59,117 - #9 )
INFO  00:23:59,117 - #7 ;
INFO  00:23:59,117 - #4 }
INFO  00:23:59,117 - #4 }
INFO  00:23:59,130 - Program(
  ProgramID(
   MJProgram
  ) [ProgramID]
  NoProgramDeclarations(
  ) [NoProgramDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MehtodTypeNameCustom(
        Type(
         int
        ) [Type]
       k
      ) [MehtodTypeNameCustom]
      FormParams(
        FormPars(
          SingleFormalParamDecl(
            FormalParamDecl(
              Type(
               int
              ) [Type]
             c
              NoBrackets(
              ) [NoBrackets]
            ) [FormalParamDecl]
          ) [SingleFormalParamDecl]
        ) [FormPars]
      ) [FormParams]
      VariableDeclarations(
        VariableDeclarations(
          VariableDeclarations(
            VariableDeclarations(
              NoVariableDeclarations(
              ) [NoVariableDeclarations]
              VarDecl(
                Type(
                 int
                ) [Type]
                VarDeclPart(
                  VarPartItem(
                   c
                  ) [VarPartItem]
                ) [VarDeclPart]
              ) [VarDecl]
            ) [VariableDeclarations]
            VarDecl(
              Type(
               int
              ) [Type]
              VarDeclPart(
                VarPartItem(
                 x
                ) [VarPartItem]
              ) [VarDeclPart]
            ) [VarDecl]
          ) [VariableDeclarations]
          VarDecl(
            Type(
             char
            ) [Type]
            VarDeclPart(
              ArrayVarPart(
               f
              ) [ArrayVarPart]
            ) [VarDeclPart]
          ) [VarDecl]
        ) [VariableDeclarations]
        VarDecl(
          Type(
           int
          ) [Type]
          VarDeclPart(
            ErrorInDeclaringItem(
            ) [ErrorInDeclaringItem]
          ) [VarDeclPart]
        ) [VarDecl]
      ) [VariableDeclarations]
      Statements(
        Statements(
          Statements(
            NotStatements(
            ) [NotStatements]
            StatementDesignator(
              DesignatorAssignOp(
                DesignatorIdent(
                 i
                ) [DesignatorIdent]
                Assignop(
                ) [Assignop]
                SimpleExpr(
                  Expr1Term(
                    TermFactor(
                      FactorNumber(
                       1
                      ) [FactorNumber]
                    ) [TermFactor]
                  ) [Expr1Term]
                ) [SimpleExpr]
              ) [DesignatorAssignOp]
            ) [StatementDesignator]
          ) [Statements]
          StatementPrint(
            SimpleExpr(
              Expr1Term(
                TermFactor(
                  FactorDesignator(
                    DesignatorIdent(
                     i
                    ) [DesignatorIdent]
                  ) [FactorDesignator]
                ) [TermFactor]
              ) [Expr1Term]
            ) [SimpleExpr]
            NoNumConst(
            ) [NoNumConst]
          ) [StatementPrint]
        ) [Statements]
        StatementPrint(
          SimpleExpr(
            Expr1Term(
              TermFactor(
                FactorChar(
                 c
                ) [FactorChar]
              ) [TermFactor]
            ) [Expr1Term]
          ) [SimpleExpr]
          NoNumConst(
          ) [NoNumConst]
        ) [StatementPrint]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:23:59,130 - ===================================
INFO  00:23:59,134 - Obradjuje se funkcija k on line 4
INFO  00:23:59,134 - dodata promenljiva c on line 4
INFO  00:23:59,134 - dodata promenljiva x on line 4
INFO  00:23:59,134 - dodata promenljiva f on line 4
ERROR 00:23:59,134 - Ident i nije prethodno deklarisan
ERROR 00:23:59,134 - Greska nekompatibilni tipovi on line 20
ERROR 00:23:59,134 - Ident i nije prethodno deklarisan
ERROR 00:23:59,134 - Semanticka greska na liniji 21: Operand instrukcije PRINT mora biti char ili int tipa
INFO  00:23:59,135 - Print count calls =2
INFO  00:23:59,135 - Vars = 0
INFO  00:23:59,135 - ===================================
ERROR 00:23:59,136 - Parsiranje NIJE uspesno zavrseno!
